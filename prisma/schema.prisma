// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["deno"]
  output          = "../generated/client"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Dinosaur {
  id          Int     @id @default(autoincrement())
  name        String
  description String?
}

model Empleados {
  num_empleado   Int    @id @default(autoincrement())
  nom_empleado   String @db.VarChar(100)
  dir_empleado   String @unique @db.VarChar(100)
  cat_empleado   String @db.Char(2)
  sal_empleado   Int
  nom_supervisor String @db.VarChar(100)
  email_empleado String @unique
  pass_empleado  String @db.VarChar(255)
}

model InmueblesAlquiler {
  num_inmueble           Int                        @id @default(autoincrement())
  dir_inmueble           String                     @db.VarChar(100)
  tipo_inmueble          String                     @db.VarChar(20)
  num_habitaciones       Int                        @db.SmallInt // !DEBE SER DE LONGITUD DE 3
  import_mensual         Int
  ContratosAlquiler      ContratosAlquiler[]
  Citas                  Citas[]
  propietarioPrivado     PropietariosPrivados?      @relation(fields: [num_propietario], references: [num_propietario], onDelete: Cascade, onUpdate: Cascade)
  propietarioEmpresarial PropietariosEmpresariales? @relation(fields: [num_propietario_emp], references: [num_propietario_em], onDelete: Cascade, onUpdate: Cascade)
  num_propietario        Int?
  num_propietario_emp    Int?
}

model PropietariosPrivados {
  num_propietario   Int                 @id @default(autoincrement())
  nom_propietario   String              @db.VarChar(100)
  dir_propietario   String              @db.VarChar(100)
  tel_propietario   String              @db.VarChar(10)
  InmueblesAlquiler InmueblesAlquiler[]
}

model PropietariosEmpresariales {
  num_propietario_em Int                 @id @default(autoincrement())
  nom_empresa        String              @db.VarChar(25)
  tipo_empresa       String              @db.VarChar(30)
  dir_empresa        String              @db.VarChar(100)
  tel_empresa        String              @db.VarChar(10)
  nom_contacto       String              @db.VarChar(100)
  InmueblesAlquiler  InmueblesAlquiler[]
}

model Clientes {
  num_cliente         Int    @id @default(autoincrement())
  nom_cliente         String @db.VarChar(100)
  tel_cliente         String @db.VarChar(10)
  tipo_inmueble       String @db.VarChar(20)
  importmax_inmueble  Int
  nom_empleado        String? @db.VarChar(100)
  sucregistro_cliente String @db.VarChar(30)
  email_cliente       String @unique
  pass_cliente        String @db.VarChar(255)

  ContratosAlquiler ContratosAlquiler[]
  Citas             Citas[]
}

model ContratosAlquiler {
  num_contrato   Int               @id @default(autoincrement())
  cliente        Clientes          @relation(fields: [num_cliente], references: [num_cliente], onDelete: Cascade, onUpdate: Cascade)
  num_cliente    Int
  nom_cliente    String            @db.VarChar(100)
  inmueble       InmueblesAlquiler @relation(fields: [num_inmueble], references: [num_inmueble], onDelete: Cascade, onUpdate: Cascade)
  num_inmueble   Int
  dir_inmueble   String            @db.VarChar(100)
  import_mensual Int
  mod_pago       String            @db.VarChar(25)
  dep_pago       String            @db.VarChar(25)
  dur_contrato   Int
  fech_inicio    DateTime          @db.Date
  fech_fin       DateTime          @db.Date
}

model Citas {
  num_cita     Int               @id @default(autoincrement())
  cliente      Clientes          @relation(fields: [num_cliente], references: [num_cliente], onDelete: Cascade, onUpdate: Cascade)
  num_cliente  Int
  inmueble     InmueblesAlquiler @relation(fields: [num_inmueble], references: [num_inmueble], onDelete: Cascade, onUpdate: Cascade)
  num_inmueble Int
  fech_cita    DateTime?         @db.Date
}
